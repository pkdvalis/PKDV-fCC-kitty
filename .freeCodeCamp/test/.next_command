bad_command
bad_command > stderr.txt
__vsc_prompt_cmd_original
bad_command 2> stderr.txt
echo hello bash > stdout.txt
read NAME
echo NAME
echo $NAME
echo $NAME > stdout.txt
echo freeCodeCamp > name.txt
read NAME < name.txt
echo $NAME
echo Steve
echo $NAME
cat
cat name.txt
cat < name.txt
echo Bill
touch script.sh
chmod script.sh +x
chmod --help
chmod +x script.sh
./script.sh
echo Fam
echo Fam
echo Fam
./script.sh < name.txt
./script.sh < name.txt 2> stderr.txt
./script.sh < name.txt 2> stderr.txt > stdout.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_2.txt
wc kitty_ipsum_1.txt
man wc
wc kitty_ipsum_1.txt -l
wc kitty_ipsum_1.txt -w
wc kitty_ipsum_1.txt -b
wc kitty_ipsum_1.txt -c
man wc
wc kitty_ipsum_1.txt -m
wc kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_1.txt > wc
wc < kitty_ipsum_1.txt
echo "~~ kitty_ipsum_1.txt info ~~" > kitty_info.txt
man echo
echo "\nNumber of lines:" >> kitty_info.txt
echo \n"Number of lines:" >> kitty_info.txt
echo -e \n "Number of lines:" >> kitty_info.txt
echo "\nNumber of lines:" >> kitty_info.txt
echo -e "\nNumber of lines:" >> kitty_info.txt
cat kitty_ipsum_1.txt
echo -e "\nNumber of words:" >> kitty_info.txt
cat kitty_ipsum_1.txt
echo -e "\nNumber of characters:" >> kitty_info.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_1.txt -m > wc >> kitty_info.txt
wc -m kitty_ipsum_1.txt < cat >> kitty_info.txt
wc -m < kitty_ipsum_1.txt >> kitty_info.txt
grep 'meow' kitty_ipsum_1.txt
man grep
grep 'meow' kitty_ipsum_1.txt --color
man grep
grep 'meow' kitty_ipsum_1.txt --color -n
grep 'meow[a-z]*' kitty_ipsum_1.txt --color -n
echo -e "\nNumber of times meow or meowzer appears:" >> kitty_info.txt
grep 'meow[a-z]*' kitty_ipsum_1.txt --color
grep 'meow[a-z]*' kitty_ipsum_1.txt -c
man grep
grep 'meow[a-z]*' kitty_ipsum_1.txt -o
grep 'meow[a-z]*' kitty_ipsum_1.txt -o
grep 'meow[a-z]*' kitty_ipsum_1.txt -o
echo -e "\nLines that they appear on:" >> kitty_info.txt
grep 'meow[a-z]*' kitty_ipsum_1.txt -n
man grep
cat name.txt
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
